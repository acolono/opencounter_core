# meant to be run locally or on a gitlab instance.
# for local testing use e.g.

# gitlab-ci-multi-runner exec docker --docker-privileged --env CI_PROJECT_NAME=anything --cache-dir=/tmp/gitlabrunner --docker-volumes /tmp/gitlabrunner:/tmp/gitlabrunner occ_test

# Select image from https://hub.docker.com/_/php/
image: php:5.6
# Select what we should cache


before_script:
# Install git and zip since the php image doesn't have installed
- apt-get update -yqq
- apt-get install git zip -yqq
# Install composer
- curl -sS https://getcomposer.org/installer | php
- php composer.phar global require "squizlabs/php_codesniffer=*"

# TODO: setup another job testing if running composer update on existing sites breaks anything

# define different pipelines for our jobs
stages:
  - build
  - test
  - release
  - deploy

# lets start with installing dependencies via composer in a build task.
# if this job succeeds then we know install works and we have vendor and bin directory created and cached
occ_build:
  stage: build
  script:
    # TODO: get commits to inspect so we can enforce reference to issue and so on
    # install dependencies
    - php composer.phar install
    # find out if there is a new feature described and documented
  artifacts:
    untracked: true
    paths:
    - bin/
    - vendor/
    expire_in: 1 week


# run behat tests in php 5.6
occ_test:
  stage: test
  script:
  # run behat tests
    - bin/behat
    # TODO run phpspec tests
    #- bin/phpspec run
    # run codestyle checks but dont yet autofix anything
    - ~/.composer/vendor/bin/phpcs --standard=psr2 --error-severity=1 --warning-severity=8 src
  # Store resulting behat html report as artifact
  artifacts:
    name: "$CI_BUILD_REF"
    untracked: true
    paths:
      - descriptions/behat/reports/html/behat/
    expire_in: 1 week


# We test behat in PHP7, but we allow it to fail
occ_test:php7:
  stage: test
  image: php:7.0
  script:
    - bin/behat
  allow_failure: true

# todo Release stage and job For Master Branch
# when I merge a Pull request that adds a new feature (feature branch)
# Then the corresponding github issue should be closed https://gitlab.com/gitlab-org/gitlab-ce/issues/23405
# [X] And the changelog needs to be regenerated
# And the master branch should get a new semver tag after merge
# And Github Release notes should be genereated
# And Documentation should be rebuilt (phpdoc)

occ_changelog:
  stage: release
  only:
    - master
  image: ruby:2.3
  script:
    # make sure we have the gem to generate changelog
    - gem install github_changelog_generator
    # generate changelog
    - github_changelog_generator acolono/opencounter_core
  allow_failure: true
  # Store resulting changelog as artifact
  artifacts:
    name: "$CI_BUILD_REF"
    untracked: true
    paths:
      - CHANGELOG.md
    expire_in: 1 week

occ_phpdoc:
  stage: release
  only:
    - master
  image: php:5.6
  script:
    # phpdocumentor
    - php composer.phar global require "phpdocumentor/phpdocumentor:2.*"
    - ~/.composer/vendor/bin/phpdoc -d ./src -t ./docs/core
  allow_failure: true
  # Store resulting changelog as artifact
  artifacts:
    name: "$CI_BUILD_REF-phpdoc"
    untracked: true
    paths:
      - docs/core
    expire_in: 1 week

# TODO Deploy stage
# trigger build of slimcounter canary branch
# deploy documentation to github pages
# deploy reports to github pages


pages:
  stage: deploy
  only:
    - tags
  image: php:5.6
  script:
    # phpdocumentor
    - php composer.phar global require "phpdocumentor/phpdocumentor:2.*"
    - ~/.composer/vendor/bin/phpdoc -d ./src -t ./public/docs/core
  allow_failure: true
  # Store resulting changelog as artifact
  artifacts:
    name: "$CI_BUILD_REF"
    untracked: true
    paths:
    - public/docs/Core
    expire_in: 1 week